/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for BranchProtectionRule
 */
public class BranchProtectionRuleTest {
    private final BranchProtectionRule model = new BranchProtectionRule();

    /**
     * Model tests for BranchProtectionRule
     */
    @Test
    public void testBranchProtectionRule() {
        // TODO: test BranchProtectionRule
    }

    /**
     * Test the property 'adminEnforced'
     */
    @Test
    public void adminEnforcedTest() {
        // TODO: test adminEnforced
    }

    /**
     * Test the property 'allowDeletionsEnforcementLevel'
     */
    @Test
    public void allowDeletionsEnforcementLevelTest() {
        // TODO: test allowDeletionsEnforcementLevel
    }

    /**
     * Test the property 'allowForcePushesEnforcementLevel'
     */
    @Test
    public void allowForcePushesEnforcementLevelTest() {
        // TODO: test allowForcePushesEnforcementLevel
    }

    /**
     * Test the property 'authorizedActorNames'
     */
    @Test
    public void authorizedActorNamesTest() {
        // TODO: test authorizedActorNames
    }

    /**
     * Test the property 'authorizedActorsOnly'
     */
    @Test
    public void authorizedActorsOnlyTest() {
        // TODO: test authorizedActorsOnly
    }

    /**
     * Test the property 'authorizedDismissalActorsOnly'
     */
    @Test
    public void authorizedDismissalActorsOnlyTest() {
        // TODO: test authorizedDismissalActorsOnly
    }

    /**
     * Test the property 'createProtected'
     */
    @Test
    public void createProtectedTest() {
        // TODO: test createProtected
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'dismissStaleReviewsOnPush'
     */
    @Test
    public void dismissStaleReviewsOnPushTest() {
        // TODO: test dismissStaleReviewsOnPush
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ignoreApprovalsFromContributors'
     */
    @Test
    public void ignoreApprovalsFromContributorsTest() {
        // TODO: test ignoreApprovalsFromContributors
    }

    /**
     * Test the property 'linearHistoryRequirementEnforcementLevel'
     */
    @Test
    public void linearHistoryRequirementEnforcementLevelTest() {
        // TODO: test linearHistoryRequirementEnforcementLevel
    }

    /**
     * Test the property 'mergeQueueEnforcementLevel'
     */
    @Test
    public void mergeQueueEnforcementLevelTest() {
        // TODO: test mergeQueueEnforcementLevel
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'pullRequestReviewsEnforcementLevel'
     */
    @Test
    public void pullRequestReviewsEnforcementLevelTest() {
        // TODO: test pullRequestReviewsEnforcementLevel
    }

    /**
     * Test the property 'repositoryId'
     */
    @Test
    public void repositoryIdTest() {
        // TODO: test repositoryId
    }

    /**
     * Test the property 'requireCodeOwnerReview'
     */
    @Test
    public void requireCodeOwnerReviewTest() {
        // TODO: test requireCodeOwnerReview
    }

    /**
     * Test the property 'requiredApprovingReviewCount'
     */
    @Test
    public void requiredApprovingReviewCountTest() {
        // TODO: test requiredApprovingReviewCount
    }

    /**
     * Test the property 'requiredConversationResolutionLevel'
     */
    @Test
    public void requiredConversationResolutionLevelTest() {
        // TODO: test requiredConversationResolutionLevel
    }

    /**
     * Test the property 'requiredDeploymentsEnforcementLevel'
     */
    @Test
    public void requiredDeploymentsEnforcementLevelTest() {
        // TODO: test requiredDeploymentsEnforcementLevel
    }

    /**
     * Test the property 'requiredStatusChecks'
     */
    @Test
    public void requiredStatusChecksTest() {
        // TODO: test requiredStatusChecks
    }

    /**
     * Test the property 'requiredStatusChecksEnforcementLevel'
     */
    @Test
    public void requiredStatusChecksEnforcementLevelTest() {
        // TODO: test requiredStatusChecksEnforcementLevel
    }

    /**
     * Test the property 'signatureRequirementEnforcementLevel'
     */
    @Test
    public void signatureRequirementEnforcementLevelTest() {
        // TODO: test signatureRequirementEnforcementLevel
    }

    /**
     * Test the property 'strictRequiredStatusChecksPolicy'
     */
    @Test
    public void strictRequiredStatusChecksPolicyTest() {
        // TODO: test strictRequiredStatusChecksPolicy
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
