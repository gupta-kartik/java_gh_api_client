/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for WebhookInstallationTargetRenamedAccount
 */
public class WebhookInstallationTargetRenamedAccountTest {
    private final WebhookInstallationTargetRenamedAccount model = new WebhookInstallationTargetRenamedAccount();

    /**
     * Model tests for WebhookInstallationTargetRenamedAccount
     */
    @Test
    public void testWebhookInstallationTargetRenamedAccount() {
        // TODO: test WebhookInstallationTargetRenamedAccount
    }

    /**
     * Test the property 'avatarUrl'
     */
    @Test
    public void avatarUrlTest() {
        // TODO: test avatarUrl
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'eventsUrl'
     */
    @Test
    public void eventsUrlTest() {
        // TODO: test eventsUrl
    }

    /**
     * Test the property 'followers'
     */
    @Test
    public void followersTest() {
        // TODO: test followers
    }

    /**
     * Test the property 'followersUrl'
     */
    @Test
    public void followersUrlTest() {
        // TODO: test followersUrl
    }

    /**
     * Test the property 'following'
     */
    @Test
    public void followingTest() {
        // TODO: test following
    }

    /**
     * Test the property 'followingUrl'
     */
    @Test
    public void followingUrlTest() {
        // TODO: test followingUrl
    }

    /**
     * Test the property 'gistsUrl'
     */
    @Test
    public void gistsUrlTest() {
        // TODO: test gistsUrl
    }

    /**
     * Test the property 'gravatarId'
     */
    @Test
    public void gravatarIdTest() {
        // TODO: test gravatarId
    }

    /**
     * Test the property 'hasOrganizationProjects'
     */
    @Test
    public void hasOrganizationProjectsTest() {
        // TODO: test hasOrganizationProjects
    }

    /**
     * Test the property 'hasRepositoryProjects'
     */
    @Test
    public void hasRepositoryProjectsTest() {
        // TODO: test hasRepositoryProjects
    }

    /**
     * Test the property 'hooksUrl'
     */
    @Test
    public void hooksUrlTest() {
        // TODO: test hooksUrl
    }

    /**
     * Test the property 'htmlUrl'
     */
    @Test
    public void htmlUrlTest() {
        // TODO: test htmlUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isVerified'
     */
    @Test
    public void isVerifiedTest() {
        // TODO: test isVerified
    }

    /**
     * Test the property 'issuesUrl'
     */
    @Test
    public void issuesUrlTest() {
        // TODO: test issuesUrl
    }

    /**
     * Test the property 'login'
     */
    @Test
    public void loginTest() {
        // TODO: test login
    }

    /**
     * Test the property 'membersUrl'
     */
    @Test
    public void membersUrlTest() {
        // TODO: test membersUrl
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeId'
     */
    @Test
    public void nodeIdTest() {
        // TODO: test nodeId
    }

    /**
     * Test the property 'organizationsUrl'
     */
    @Test
    public void organizationsUrlTest() {
        // TODO: test organizationsUrl
    }

    /**
     * Test the property 'publicGists'
     */
    @Test
    public void publicGistsTest() {
        // TODO: test publicGists
    }

    /**
     * Test the property 'publicMembersUrl'
     */
    @Test
    public void publicMembersUrlTest() {
        // TODO: test publicMembersUrl
    }

    /**
     * Test the property 'publicRepos'
     */
    @Test
    public void publicReposTest() {
        // TODO: test publicRepos
    }

    /**
     * Test the property 'receivedEventsUrl'
     */
    @Test
    public void receivedEventsUrlTest() {
        // TODO: test receivedEventsUrl
    }

    /**
     * Test the property 'reposUrl'
     */
    @Test
    public void reposUrlTest() {
        // TODO: test reposUrl
    }

    /**
     * Test the property 'siteAdmin'
     */
    @Test
    public void siteAdminTest() {
        // TODO: test siteAdmin
    }

    /**
     * Test the property 'slug'
     */
    @Test
    public void slugTest() {
        // TODO: test slug
    }

    /**
     * Test the property 'starredUrl'
     */
    @Test
    public void starredUrlTest() {
        // TODO: test starredUrl
    }

    /**
     * Test the property 'subscriptionsUrl'
     */
    @Test
    public void subscriptionsUrlTest() {
        // TODO: test subscriptionsUrl
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'websiteUrl'
     */
    @Test
    public void websiteUrlTest() {
        // TODO: test websiteUrl
    }

}
