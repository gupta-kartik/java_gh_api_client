/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BasicError;
import org.openapitools.client.model.DependencyGraphCreateRepositorySnapshot201Response;
import org.openapitools.client.model.DependencyGraphDiffInner;
import org.openapitools.client.model.DependencyGraphSpdxSbom;
import org.openapitools.client.model.Snapshot;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DependencyGraphApi
 */
@Disabled
public class DependencyGraphApiTest {

    private final DependencyGraphApi api = new DependencyGraphApi();

    /**
     * Create a snapshot of dependencies for a repository
     *
     * Create a new snapshot of a repository&#39;s dependencies. You must authenticate using an access token with the &#x60;repo&#x60; scope to use this endpoint for a repository that the requesting user has access to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dependencyGraphCreateRepositorySnapshotTest() throws ApiException {
        String owner = null;
        String repo = null;
        Snapshot snapshot = null;
        DependencyGraphCreateRepositorySnapshot201Response response = api.dependencyGraphCreateRepositorySnapshot(owner, repo, snapshot);
        // TODO: test validations
    }

    /**
     * Get a diff of the dependencies between commits
     *
     * Gets the diff of the dependency changes between two commits of a repository, based on the changes to the dependency manifests made in those commits.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dependencyGraphDiffRangeTest() throws ApiException {
        String owner = null;
        String repo = null;
        String basehead = null;
        String name = null;
        List<DependencyGraphDiffInner> response = api.dependencyGraphDiffRange(owner, repo, basehead, name);
        // TODO: test validations
    }

    /**
     * Export a software bill of materials (SBOM) for a repository.
     *
     * Exports the software bill of materials (SBOM) for a repository in SPDX JSON format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dependencyGraphExportSbomTest() throws ApiException {
        String owner = null;
        String repo = null;
        DependencyGraphSpdxSbom response = api.dependencyGraphExportSbom(owner, repo);
        // TODO: test validations
    }

}
