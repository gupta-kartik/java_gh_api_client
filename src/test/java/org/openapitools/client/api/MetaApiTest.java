/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiOverview;
import org.openapitools.client.model.BasicError;
import java.time.LocalDate;
import org.openapitools.client.model.Root;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetaApi
 */
@Disabled
public class MetaApiTest {

    private final MetaApi api = new MetaApi();

    /**
     * Get GitHub meta information
     *
     * Returns meta information about GitHub, including a list of GitHub&#39;s IP addresses. For more information, see \&quot;[About GitHub&#39;s IP addresses](https://docs.github.com/articles/about-github-s-ip-addresses/).\&quot;  The values shown in the documentation&#39;s response are example values. You must always query the API directly to get the latest values.  **Note:** This endpoint returns both IPv4 and IPv6 addresses. However, not all features support IPv6. You should refer to the specific documentation for each feature to determine if IPv6 is supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void metaGetTest() throws ApiException {
        ApiOverview response = api.metaGet();
        // TODO: test validations
    }

    /**
     * Get all API versions
     *
     * Get all supported GitHub API versions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void metaGetAllVersionsTest() throws ApiException {
        List<LocalDate> response = api.metaGetAllVersions();
        // TODO: test validations
    }

    /**
     * Get Octocat
     *
     * Get the octocat as ASCII art
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void metaGetOctocatTest() throws ApiException {
        String s = null;
        String response = api.metaGetOctocat(s);
        // TODO: test validations
    }

    /**
     * Get the Zen of GitHub
     *
     * Get a random sentence from the Zen of GitHub
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void metaGetZenTest() throws ApiException {
        String response = api.metaGetZen();
        // TODO: test validations
    }

    /**
     * GitHub API Root
     *
     * Get Hypermedia links to resources accessible in GitHub&#39;s REST API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void metaRootTest() throws ApiException {
        Root response = api.metaRoot();
        // TODO: test validations
    }

}
