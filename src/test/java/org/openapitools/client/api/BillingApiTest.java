/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActionsBillingUsage;
import org.openapitools.client.model.CombinedBillingUsage;
import org.openapitools.client.model.PackagesBillingUsage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillingApi
 */
@Disabled
public class BillingApiTest {

    private final BillingApi api = new BillingApi();

    /**
     * Get GitHub Actions billing for an organization
     *
     * Gets the summary of the free and paid GitHub Actions minutes used.  Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage returned includes any minute multipliers for macOS and Windows runners, and is rounded up to the nearest whole minute. For more information, see \&quot;[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\&quot;.  Access tokens must have the &#x60;repo&#x60; or &#x60;admin:org&#x60; scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetGithubActionsBillingOrgTest() throws ApiException {
        String org = null;
        ActionsBillingUsage response = api.billingGetGithubActionsBillingOrg(org);
        // TODO: test validations
    }

    /**
     * Get GitHub Actions billing for a user
     *
     * Gets the summary of the free and paid GitHub Actions minutes used.  Paid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage returned includes any minute multipliers for macOS and Windows runners, and is rounded up to the nearest whole minute. For more information, see \&quot;[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\&quot;.  Access tokens must have the &#x60;user&#x60; scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetGithubActionsBillingUserTest() throws ApiException {
        String username = null;
        ActionsBillingUsage response = api.billingGetGithubActionsBillingUser(username);
        // TODO: test validations
    }

    /**
     * Get GitHub Packages billing for an organization
     *
     * Gets the free and paid storage used for GitHub Packages in gigabytes.  Paid minutes only apply to packages stored for private repositories. For more information, see \&quot;[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\&quot;  Access tokens must have the &#x60;repo&#x60; or &#x60;admin:org&#x60; scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetGithubPackagesBillingOrgTest() throws ApiException {
        String org = null;
        PackagesBillingUsage response = api.billingGetGithubPackagesBillingOrg(org);
        // TODO: test validations
    }

    /**
     * Get GitHub Packages billing for a user
     *
     * Gets the free and paid storage used for GitHub Packages in gigabytes.  Paid minutes only apply to packages stored for private repositories. For more information, see \&quot;[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\&quot;  Access tokens must have the &#x60;user&#x60; scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetGithubPackagesBillingUserTest() throws ApiException {
        String username = null;
        PackagesBillingUsage response = api.billingGetGithubPackagesBillingUser(username);
        // TODO: test validations
    }

    /**
     * Get shared storage billing for an organization
     *
     * Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.  Paid minutes only apply to packages stored for private repositories. For more information, see \&quot;[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\&quot;  Access tokens must have the &#x60;repo&#x60; or &#x60;admin:org&#x60; scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetSharedStorageBillingOrgTest() throws ApiException {
        String org = null;
        CombinedBillingUsage response = api.billingGetSharedStorageBillingOrg(org);
        // TODO: test validations
    }

    /**
     * Get shared storage billing for a user
     *
     * Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.  Paid minutes only apply to packages stored for private repositories. For more information, see \&quot;[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\&quot;  Access tokens must have the &#x60;user&#x60; scope.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void billingGetSharedStorageBillingUserTest() throws ApiException {
        String username = null;
        CombinedBillingUsage response = api.billingGetSharedStorageBillingUser(username);
        // TODO: test validations
    }

}
