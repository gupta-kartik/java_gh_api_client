/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.DeploymentWorkflowRunHeadRepositoryOwner;
import org.openapitools.client.model.SponsorshipTier;
import org.openapitools.client.model.User;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebhookSponsorshipCancelledSponsorship
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-09T20:37:23.111113500+10:00[Australia/Brisbane]")
public class WebhookSponsorshipCancelledSponsorship {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_MAINTAINER = "maintainer";
  @SerializedName(SERIALIZED_NAME_MAINTAINER)
  private DeploymentWorkflowRunHeadRepositoryOwner maintainer;

  public static final String SERIALIZED_NAME_NODE_ID = "node_id";
  @SerializedName(SERIALIZED_NAME_NODE_ID)
  private String nodeId;

  public static final String SERIALIZED_NAME_PRIVACY_LEVEL = "privacy_level";
  @SerializedName(SERIALIZED_NAME_PRIVACY_LEVEL)
  private String privacyLevel;

  public static final String SERIALIZED_NAME_SPONSOR = "sponsor";
  @SerializedName(SERIALIZED_NAME_SPONSOR)
  private User sponsor;

  public static final String SERIALIZED_NAME_SPONSORABLE = "sponsorable";
  @SerializedName(SERIALIZED_NAME_SPONSORABLE)
  private User sponsorable;

  public static final String SERIALIZED_NAME_TIER = "tier";
  @SerializedName(SERIALIZED_NAME_TIER)
  private SponsorshipTier tier;

  public WebhookSponsorshipCancelledSponsorship() {
  }

  public WebhookSponsorshipCancelledSponsorship createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public WebhookSponsorshipCancelledSponsorship maintainer(DeploymentWorkflowRunHeadRepositoryOwner maintainer) {
    
    this.maintainer = maintainer;
    return this;
  }

   /**
   * Get maintainer
   * @return maintainer
  **/
  @javax.annotation.Nullable

  public DeploymentWorkflowRunHeadRepositoryOwner getMaintainer() {
    return maintainer;
  }


  public void setMaintainer(DeploymentWorkflowRunHeadRepositoryOwner maintainer) {
    this.maintainer = maintainer;
  }


  public WebhookSponsorshipCancelledSponsorship nodeId(String nodeId) {
    
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @javax.annotation.Nonnull

  public String getNodeId() {
    return nodeId;
  }


  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }


  public WebhookSponsorshipCancelledSponsorship privacyLevel(String privacyLevel) {
    
    this.privacyLevel = privacyLevel;
    return this;
  }

   /**
   * Get privacyLevel
   * @return privacyLevel
  **/
  @javax.annotation.Nonnull

  public String getPrivacyLevel() {
    return privacyLevel;
  }


  public void setPrivacyLevel(String privacyLevel) {
    this.privacyLevel = privacyLevel;
  }


  public WebhookSponsorshipCancelledSponsorship sponsor(User sponsor) {
    
    this.sponsor = sponsor;
    return this;
  }

   /**
   * Get sponsor
   * @return sponsor
  **/
  @javax.annotation.Nullable

  public User getSponsor() {
    return sponsor;
  }


  public void setSponsor(User sponsor) {
    this.sponsor = sponsor;
  }


  public WebhookSponsorshipCancelledSponsorship sponsorable(User sponsorable) {
    
    this.sponsorable = sponsorable;
    return this;
  }

   /**
   * Get sponsorable
   * @return sponsorable
  **/
  @javax.annotation.Nullable

  public User getSponsorable() {
    return sponsorable;
  }


  public void setSponsorable(User sponsorable) {
    this.sponsorable = sponsorable;
  }


  public WebhookSponsorshipCancelledSponsorship tier(SponsorshipTier tier) {
    
    this.tier = tier;
    return this;
  }

   /**
   * Get tier
   * @return tier
  **/
  @javax.annotation.Nonnull

  public SponsorshipTier getTier() {
    return tier;
  }


  public void setTier(SponsorshipTier tier) {
    this.tier = tier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookSponsorshipCancelledSponsorship webhookSponsorshipCancelledSponsorship = (WebhookSponsorshipCancelledSponsorship) o;
    return Objects.equals(this.createdAt, webhookSponsorshipCancelledSponsorship.createdAt) &&
        Objects.equals(this.maintainer, webhookSponsorshipCancelledSponsorship.maintainer) &&
        Objects.equals(this.nodeId, webhookSponsorshipCancelledSponsorship.nodeId) &&
        Objects.equals(this.privacyLevel, webhookSponsorshipCancelledSponsorship.privacyLevel) &&
        Objects.equals(this.sponsor, webhookSponsorshipCancelledSponsorship.sponsor) &&
        Objects.equals(this.sponsorable, webhookSponsorshipCancelledSponsorship.sponsorable) &&
        Objects.equals(this.tier, webhookSponsorshipCancelledSponsorship.tier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, maintainer, nodeId, privacyLevel, sponsor, sponsorable, tier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookSponsorshipCancelledSponsorship {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    maintainer: ").append(toIndentedString(maintainer)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    privacyLevel: ").append(toIndentedString(privacyLevel)).append("\n");
    sb.append("    sponsor: ").append(toIndentedString(sponsor)).append("\n");
    sb.append("    sponsorable: ").append(toIndentedString(sponsorable)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("maintainer");
    openapiFields.add("node_id");
    openapiFields.add("privacy_level");
    openapiFields.add("sponsor");
    openapiFields.add("sponsorable");
    openapiFields.add("tier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("node_id");
    openapiRequiredFields.add("privacy_level");
    openapiRequiredFields.add("sponsor");
    openapiRequiredFields.add("sponsorable");
    openapiRequiredFields.add("tier");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhookSponsorshipCancelledSponsorship
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhookSponsorshipCancelledSponsorship.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhookSponsorshipCancelledSponsorship is not found in the empty JSON string", WebhookSponsorshipCancelledSponsorship.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhookSponsorshipCancelledSponsorship.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhookSponsorshipCancelledSponsorship` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WebhookSponsorshipCancelledSponsorship.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      // validate the optional field `maintainer`
      if (jsonObj.get("maintainer") != null && !jsonObj.get("maintainer").isJsonNull()) {
        DeploymentWorkflowRunHeadRepositoryOwner.validateJsonObject(jsonObj.getAsJsonObject("maintainer"));
      }
      if (!jsonObj.get("node_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `node_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("node_id").toString()));
      }
      if (!jsonObj.get("privacy_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacy_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacy_level").toString()));
      }
      // validate the required field `sponsor`
      User.validateJsonObject(jsonObj.getAsJsonObject("sponsor"));
      // validate the required field `sponsorable`
      User.validateJsonObject(jsonObj.getAsJsonObject("sponsorable"));
      // validate the required field `tier`
      SponsorshipTier.validateJsonObject(jsonObj.getAsJsonObject("tier"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhookSponsorshipCancelledSponsorship.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhookSponsorshipCancelledSponsorship' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhookSponsorshipCancelledSponsorship> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhookSponsorshipCancelledSponsorship.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhookSponsorshipCancelledSponsorship>() {
           @Override
           public void write(JsonWriter out, WebhookSponsorshipCancelledSponsorship value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhookSponsorshipCancelledSponsorship read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhookSponsorshipCancelledSponsorship given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhookSponsorshipCancelledSponsorship
  * @throws IOException if the JSON string is invalid with respect to WebhookSponsorshipCancelledSponsorship
  */
  public static WebhookSponsorshipCancelledSponsorship fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhookSponsorshipCancelledSponsorship.class);
  }

 /**
  * Convert an instance of WebhookSponsorshipCancelledSponsorship to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

