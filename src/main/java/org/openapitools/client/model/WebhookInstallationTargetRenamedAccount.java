/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebhookInstallationTargetRenamedAccount
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-09T20:37:23.111113500+10:00[Australia/Brisbane]")
public class WebhookInstallationTargetRenamedAccount {
  public static final String SERIALIZED_NAME_AVATAR_URL = "avatar_url";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description = null;

  public static final String SERIALIZED_NAME_EVENTS_URL = "events_url";
  @SerializedName(SERIALIZED_NAME_EVENTS_URL)
  private String eventsUrl;

  public static final String SERIALIZED_NAME_FOLLOWERS = "followers";
  @SerializedName(SERIALIZED_NAME_FOLLOWERS)
  private Integer followers;

  public static final String SERIALIZED_NAME_FOLLOWERS_URL = "followers_url";
  @SerializedName(SERIALIZED_NAME_FOLLOWERS_URL)
  private String followersUrl;

  public static final String SERIALIZED_NAME_FOLLOWING = "following";
  @SerializedName(SERIALIZED_NAME_FOLLOWING)
  private Integer following;

  public static final String SERIALIZED_NAME_FOLLOWING_URL = "following_url";
  @SerializedName(SERIALIZED_NAME_FOLLOWING_URL)
  private String followingUrl;

  public static final String SERIALIZED_NAME_GISTS_URL = "gists_url";
  @SerializedName(SERIALIZED_NAME_GISTS_URL)
  private String gistsUrl;

  public static final String SERIALIZED_NAME_GRAVATAR_ID = "gravatar_id";
  @SerializedName(SERIALIZED_NAME_GRAVATAR_ID)
  private String gravatarId;

  public static final String SERIALIZED_NAME_HAS_ORGANIZATION_PROJECTS = "has_organization_projects";
  @SerializedName(SERIALIZED_NAME_HAS_ORGANIZATION_PROJECTS)
  private Boolean hasOrganizationProjects;

  public static final String SERIALIZED_NAME_HAS_REPOSITORY_PROJECTS = "has_repository_projects";
  @SerializedName(SERIALIZED_NAME_HAS_REPOSITORY_PROJECTS)
  private Boolean hasRepositoryProjects;

  public static final String SERIALIZED_NAME_HOOKS_URL = "hooks_url";
  @SerializedName(SERIALIZED_NAME_HOOKS_URL)
  private String hooksUrl;

  public static final String SERIALIZED_NAME_HTML_URL = "html_url";
  @SerializedName(SERIALIZED_NAME_HTML_URL)
  private String htmlUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_VERIFIED = "is_verified";
  @SerializedName(SERIALIZED_NAME_IS_VERIFIED)
  private Boolean isVerified;

  public static final String SERIALIZED_NAME_ISSUES_URL = "issues_url";
  @SerializedName(SERIALIZED_NAME_ISSUES_URL)
  private String issuesUrl;

  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  private String login;

  public static final String SERIALIZED_NAME_MEMBERS_URL = "members_url";
  @SerializedName(SERIALIZED_NAME_MEMBERS_URL)
  private String membersUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NODE_ID = "node_id";
  @SerializedName(SERIALIZED_NAME_NODE_ID)
  private String nodeId;

  public static final String SERIALIZED_NAME_ORGANIZATIONS_URL = "organizations_url";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONS_URL)
  private String organizationsUrl;

  public static final String SERIALIZED_NAME_PUBLIC_GISTS = "public_gists";
  @SerializedName(SERIALIZED_NAME_PUBLIC_GISTS)
  private Integer publicGists;

  public static final String SERIALIZED_NAME_PUBLIC_MEMBERS_URL = "public_members_url";
  @SerializedName(SERIALIZED_NAME_PUBLIC_MEMBERS_URL)
  private String publicMembersUrl;

  public static final String SERIALIZED_NAME_PUBLIC_REPOS = "public_repos";
  @SerializedName(SERIALIZED_NAME_PUBLIC_REPOS)
  private Integer publicRepos;

  public static final String SERIALIZED_NAME_RECEIVED_EVENTS_URL = "received_events_url";
  @SerializedName(SERIALIZED_NAME_RECEIVED_EVENTS_URL)
  private String receivedEventsUrl;

  public static final String SERIALIZED_NAME_REPOS_URL = "repos_url";
  @SerializedName(SERIALIZED_NAME_REPOS_URL)
  private String reposUrl;

  public static final String SERIALIZED_NAME_SITE_ADMIN = "site_admin";
  @SerializedName(SERIALIZED_NAME_SITE_ADMIN)
  private Boolean siteAdmin;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_STARRED_URL = "starred_url";
  @SerializedName(SERIALIZED_NAME_STARRED_URL)
  private String starredUrl;

  public static final String SERIALIZED_NAME_SUBSCRIPTIONS_URL = "subscriptions_url";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTIONS_URL)
  private String subscriptionsUrl;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "website_url";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private Object websiteUrl = null;

  public WebhookInstallationTargetRenamedAccount() {
  }

  public WebhookInstallationTargetRenamedAccount avatarUrl(String avatarUrl) {
    
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * Get avatarUrl
   * @return avatarUrl
  **/
  @javax.annotation.Nonnull

  public String getAvatarUrl() {
    return avatarUrl;
  }


  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public WebhookInstallationTargetRenamedAccount createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public WebhookInstallationTargetRenamedAccount description(Object description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable

  public Object getDescription() {
    return description;
  }


  public void setDescription(Object description) {
    this.description = description;
  }


  public WebhookInstallationTargetRenamedAccount eventsUrl(String eventsUrl) {
    
    this.eventsUrl = eventsUrl;
    return this;
  }

   /**
   * Get eventsUrl
   * @return eventsUrl
  **/
  @javax.annotation.Nullable

  public String getEventsUrl() {
    return eventsUrl;
  }


  public void setEventsUrl(String eventsUrl) {
    this.eventsUrl = eventsUrl;
  }


  public WebhookInstallationTargetRenamedAccount followers(Integer followers) {
    
    this.followers = followers;
    return this;
  }

   /**
   * Get followers
   * @return followers
  **/
  @javax.annotation.Nullable

  public Integer getFollowers() {
    return followers;
  }


  public void setFollowers(Integer followers) {
    this.followers = followers;
  }


  public WebhookInstallationTargetRenamedAccount followersUrl(String followersUrl) {
    
    this.followersUrl = followersUrl;
    return this;
  }

   /**
   * Get followersUrl
   * @return followersUrl
  **/
  @javax.annotation.Nullable

  public String getFollowersUrl() {
    return followersUrl;
  }


  public void setFollowersUrl(String followersUrl) {
    this.followersUrl = followersUrl;
  }


  public WebhookInstallationTargetRenamedAccount following(Integer following) {
    
    this.following = following;
    return this;
  }

   /**
   * Get following
   * @return following
  **/
  @javax.annotation.Nullable

  public Integer getFollowing() {
    return following;
  }


  public void setFollowing(Integer following) {
    this.following = following;
  }


  public WebhookInstallationTargetRenamedAccount followingUrl(String followingUrl) {
    
    this.followingUrl = followingUrl;
    return this;
  }

   /**
   * Get followingUrl
   * @return followingUrl
  **/
  @javax.annotation.Nullable

  public String getFollowingUrl() {
    return followingUrl;
  }


  public void setFollowingUrl(String followingUrl) {
    this.followingUrl = followingUrl;
  }


  public WebhookInstallationTargetRenamedAccount gistsUrl(String gistsUrl) {
    
    this.gistsUrl = gistsUrl;
    return this;
  }

   /**
   * Get gistsUrl
   * @return gistsUrl
  **/
  @javax.annotation.Nullable

  public String getGistsUrl() {
    return gistsUrl;
  }


  public void setGistsUrl(String gistsUrl) {
    this.gistsUrl = gistsUrl;
  }


  public WebhookInstallationTargetRenamedAccount gravatarId(String gravatarId) {
    
    this.gravatarId = gravatarId;
    return this;
  }

   /**
   * Get gravatarId
   * @return gravatarId
  **/
  @javax.annotation.Nullable

  public String getGravatarId() {
    return gravatarId;
  }


  public void setGravatarId(String gravatarId) {
    this.gravatarId = gravatarId;
  }


  public WebhookInstallationTargetRenamedAccount hasOrganizationProjects(Boolean hasOrganizationProjects) {
    
    this.hasOrganizationProjects = hasOrganizationProjects;
    return this;
  }

   /**
   * Get hasOrganizationProjects
   * @return hasOrganizationProjects
  **/
  @javax.annotation.Nullable

  public Boolean getHasOrganizationProjects() {
    return hasOrganizationProjects;
  }


  public void setHasOrganizationProjects(Boolean hasOrganizationProjects) {
    this.hasOrganizationProjects = hasOrganizationProjects;
  }


  public WebhookInstallationTargetRenamedAccount hasRepositoryProjects(Boolean hasRepositoryProjects) {
    
    this.hasRepositoryProjects = hasRepositoryProjects;
    return this;
  }

   /**
   * Get hasRepositoryProjects
   * @return hasRepositoryProjects
  **/
  @javax.annotation.Nullable

  public Boolean getHasRepositoryProjects() {
    return hasRepositoryProjects;
  }


  public void setHasRepositoryProjects(Boolean hasRepositoryProjects) {
    this.hasRepositoryProjects = hasRepositoryProjects;
  }


  public WebhookInstallationTargetRenamedAccount hooksUrl(String hooksUrl) {
    
    this.hooksUrl = hooksUrl;
    return this;
  }

   /**
   * Get hooksUrl
   * @return hooksUrl
  **/
  @javax.annotation.Nullable

  public String getHooksUrl() {
    return hooksUrl;
  }


  public void setHooksUrl(String hooksUrl) {
    this.hooksUrl = hooksUrl;
  }


  public WebhookInstallationTargetRenamedAccount htmlUrl(String htmlUrl) {
    
    this.htmlUrl = htmlUrl;
    return this;
  }

   /**
   * Get htmlUrl
   * @return htmlUrl
  **/
  @javax.annotation.Nonnull

  public String getHtmlUrl() {
    return htmlUrl;
  }


  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }


  public WebhookInstallationTargetRenamedAccount id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public WebhookInstallationTargetRenamedAccount isVerified(Boolean isVerified) {
    
    this.isVerified = isVerified;
    return this;
  }

   /**
   * Get isVerified
   * @return isVerified
  **/
  @javax.annotation.Nullable

  public Boolean getIsVerified() {
    return isVerified;
  }


  public void setIsVerified(Boolean isVerified) {
    this.isVerified = isVerified;
  }


  public WebhookInstallationTargetRenamedAccount issuesUrl(String issuesUrl) {
    
    this.issuesUrl = issuesUrl;
    return this;
  }

   /**
   * Get issuesUrl
   * @return issuesUrl
  **/
  @javax.annotation.Nullable

  public String getIssuesUrl() {
    return issuesUrl;
  }


  public void setIssuesUrl(String issuesUrl) {
    this.issuesUrl = issuesUrl;
  }


  public WebhookInstallationTargetRenamedAccount login(String login) {
    
    this.login = login;
    return this;
  }

   /**
   * Get login
   * @return login
  **/
  @javax.annotation.Nullable

  public String getLogin() {
    return login;
  }


  public void setLogin(String login) {
    this.login = login;
  }


  public WebhookInstallationTargetRenamedAccount membersUrl(String membersUrl) {
    
    this.membersUrl = membersUrl;
    return this;
  }

   /**
   * Get membersUrl
   * @return membersUrl
  **/
  @javax.annotation.Nullable

  public String getMembersUrl() {
    return membersUrl;
  }


  public void setMembersUrl(String membersUrl) {
    this.membersUrl = membersUrl;
  }


  public WebhookInstallationTargetRenamedAccount name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WebhookInstallationTargetRenamedAccount nodeId(String nodeId) {
    
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @javax.annotation.Nonnull

  public String getNodeId() {
    return nodeId;
  }


  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }


  public WebhookInstallationTargetRenamedAccount organizationsUrl(String organizationsUrl) {
    
    this.organizationsUrl = organizationsUrl;
    return this;
  }

   /**
   * Get organizationsUrl
   * @return organizationsUrl
  **/
  @javax.annotation.Nullable

  public String getOrganizationsUrl() {
    return organizationsUrl;
  }


  public void setOrganizationsUrl(String organizationsUrl) {
    this.organizationsUrl = organizationsUrl;
  }


  public WebhookInstallationTargetRenamedAccount publicGists(Integer publicGists) {
    
    this.publicGists = publicGists;
    return this;
  }

   /**
   * Get publicGists
   * @return publicGists
  **/
  @javax.annotation.Nullable

  public Integer getPublicGists() {
    return publicGists;
  }


  public void setPublicGists(Integer publicGists) {
    this.publicGists = publicGists;
  }


  public WebhookInstallationTargetRenamedAccount publicMembersUrl(String publicMembersUrl) {
    
    this.publicMembersUrl = publicMembersUrl;
    return this;
  }

   /**
   * Get publicMembersUrl
   * @return publicMembersUrl
  **/
  @javax.annotation.Nullable

  public String getPublicMembersUrl() {
    return publicMembersUrl;
  }


  public void setPublicMembersUrl(String publicMembersUrl) {
    this.publicMembersUrl = publicMembersUrl;
  }


  public WebhookInstallationTargetRenamedAccount publicRepos(Integer publicRepos) {
    
    this.publicRepos = publicRepos;
    return this;
  }

   /**
   * Get publicRepos
   * @return publicRepos
  **/
  @javax.annotation.Nullable

  public Integer getPublicRepos() {
    return publicRepos;
  }


  public void setPublicRepos(Integer publicRepos) {
    this.publicRepos = publicRepos;
  }


  public WebhookInstallationTargetRenamedAccount receivedEventsUrl(String receivedEventsUrl) {
    
    this.receivedEventsUrl = receivedEventsUrl;
    return this;
  }

   /**
   * Get receivedEventsUrl
   * @return receivedEventsUrl
  **/
  @javax.annotation.Nullable

  public String getReceivedEventsUrl() {
    return receivedEventsUrl;
  }


  public void setReceivedEventsUrl(String receivedEventsUrl) {
    this.receivedEventsUrl = receivedEventsUrl;
  }


  public WebhookInstallationTargetRenamedAccount reposUrl(String reposUrl) {
    
    this.reposUrl = reposUrl;
    return this;
  }

   /**
   * Get reposUrl
   * @return reposUrl
  **/
  @javax.annotation.Nullable

  public String getReposUrl() {
    return reposUrl;
  }


  public void setReposUrl(String reposUrl) {
    this.reposUrl = reposUrl;
  }


  public WebhookInstallationTargetRenamedAccount siteAdmin(Boolean siteAdmin) {
    
    this.siteAdmin = siteAdmin;
    return this;
  }

   /**
   * Get siteAdmin
   * @return siteAdmin
  **/
  @javax.annotation.Nullable

  public Boolean getSiteAdmin() {
    return siteAdmin;
  }


  public void setSiteAdmin(Boolean siteAdmin) {
    this.siteAdmin = siteAdmin;
  }


  public WebhookInstallationTargetRenamedAccount slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nullable

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public WebhookInstallationTargetRenamedAccount starredUrl(String starredUrl) {
    
    this.starredUrl = starredUrl;
    return this;
  }

   /**
   * Get starredUrl
   * @return starredUrl
  **/
  @javax.annotation.Nullable

  public String getStarredUrl() {
    return starredUrl;
  }


  public void setStarredUrl(String starredUrl) {
    this.starredUrl = starredUrl;
  }


  public WebhookInstallationTargetRenamedAccount subscriptionsUrl(String subscriptionsUrl) {
    
    this.subscriptionsUrl = subscriptionsUrl;
    return this;
  }

   /**
   * Get subscriptionsUrl
   * @return subscriptionsUrl
  **/
  @javax.annotation.Nullable

  public String getSubscriptionsUrl() {
    return subscriptionsUrl;
  }


  public void setSubscriptionsUrl(String subscriptionsUrl) {
    this.subscriptionsUrl = subscriptionsUrl;
  }


  public WebhookInstallationTargetRenamedAccount type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public WebhookInstallationTargetRenamedAccount updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public WebhookInstallationTargetRenamedAccount url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public WebhookInstallationTargetRenamedAccount websiteUrl(Object websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Get websiteUrl
   * @return websiteUrl
  **/
  @javax.annotation.Nullable

  public Object getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(Object websiteUrl) {
    this.websiteUrl = websiteUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookInstallationTargetRenamedAccount webhookInstallationTargetRenamedAccount = (WebhookInstallationTargetRenamedAccount) o;
    return Objects.equals(this.avatarUrl, webhookInstallationTargetRenamedAccount.avatarUrl) &&
        Objects.equals(this.createdAt, webhookInstallationTargetRenamedAccount.createdAt) &&
        Objects.equals(this.description, webhookInstallationTargetRenamedAccount.description) &&
        Objects.equals(this.eventsUrl, webhookInstallationTargetRenamedAccount.eventsUrl) &&
        Objects.equals(this.followers, webhookInstallationTargetRenamedAccount.followers) &&
        Objects.equals(this.followersUrl, webhookInstallationTargetRenamedAccount.followersUrl) &&
        Objects.equals(this.following, webhookInstallationTargetRenamedAccount.following) &&
        Objects.equals(this.followingUrl, webhookInstallationTargetRenamedAccount.followingUrl) &&
        Objects.equals(this.gistsUrl, webhookInstallationTargetRenamedAccount.gistsUrl) &&
        Objects.equals(this.gravatarId, webhookInstallationTargetRenamedAccount.gravatarId) &&
        Objects.equals(this.hasOrganizationProjects, webhookInstallationTargetRenamedAccount.hasOrganizationProjects) &&
        Objects.equals(this.hasRepositoryProjects, webhookInstallationTargetRenamedAccount.hasRepositoryProjects) &&
        Objects.equals(this.hooksUrl, webhookInstallationTargetRenamedAccount.hooksUrl) &&
        Objects.equals(this.htmlUrl, webhookInstallationTargetRenamedAccount.htmlUrl) &&
        Objects.equals(this.id, webhookInstallationTargetRenamedAccount.id) &&
        Objects.equals(this.isVerified, webhookInstallationTargetRenamedAccount.isVerified) &&
        Objects.equals(this.issuesUrl, webhookInstallationTargetRenamedAccount.issuesUrl) &&
        Objects.equals(this.login, webhookInstallationTargetRenamedAccount.login) &&
        Objects.equals(this.membersUrl, webhookInstallationTargetRenamedAccount.membersUrl) &&
        Objects.equals(this.name, webhookInstallationTargetRenamedAccount.name) &&
        Objects.equals(this.nodeId, webhookInstallationTargetRenamedAccount.nodeId) &&
        Objects.equals(this.organizationsUrl, webhookInstallationTargetRenamedAccount.organizationsUrl) &&
        Objects.equals(this.publicGists, webhookInstallationTargetRenamedAccount.publicGists) &&
        Objects.equals(this.publicMembersUrl, webhookInstallationTargetRenamedAccount.publicMembersUrl) &&
        Objects.equals(this.publicRepos, webhookInstallationTargetRenamedAccount.publicRepos) &&
        Objects.equals(this.receivedEventsUrl, webhookInstallationTargetRenamedAccount.receivedEventsUrl) &&
        Objects.equals(this.reposUrl, webhookInstallationTargetRenamedAccount.reposUrl) &&
        Objects.equals(this.siteAdmin, webhookInstallationTargetRenamedAccount.siteAdmin) &&
        Objects.equals(this.slug, webhookInstallationTargetRenamedAccount.slug) &&
        Objects.equals(this.starredUrl, webhookInstallationTargetRenamedAccount.starredUrl) &&
        Objects.equals(this.subscriptionsUrl, webhookInstallationTargetRenamedAccount.subscriptionsUrl) &&
        Objects.equals(this.type, webhookInstallationTargetRenamedAccount.type) &&
        Objects.equals(this.updatedAt, webhookInstallationTargetRenamedAccount.updatedAt) &&
        Objects.equals(this.url, webhookInstallationTargetRenamedAccount.url) &&
        Objects.equals(this.websiteUrl, webhookInstallationTargetRenamedAccount.websiteUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(avatarUrl, createdAt, description, eventsUrl, followers, followersUrl, following, followingUrl, gistsUrl, gravatarId, hasOrganizationProjects, hasRepositoryProjects, hooksUrl, htmlUrl, id, isVerified, issuesUrl, login, membersUrl, name, nodeId, organizationsUrl, publicGists, publicMembersUrl, publicRepos, receivedEventsUrl, reposUrl, siteAdmin, slug, starredUrl, subscriptionsUrl, type, updatedAt, url, websiteUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookInstallationTargetRenamedAccount {\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventsUrl: ").append(toIndentedString(eventsUrl)).append("\n");
    sb.append("    followers: ").append(toIndentedString(followers)).append("\n");
    sb.append("    followersUrl: ").append(toIndentedString(followersUrl)).append("\n");
    sb.append("    following: ").append(toIndentedString(following)).append("\n");
    sb.append("    followingUrl: ").append(toIndentedString(followingUrl)).append("\n");
    sb.append("    gistsUrl: ").append(toIndentedString(gistsUrl)).append("\n");
    sb.append("    gravatarId: ").append(toIndentedString(gravatarId)).append("\n");
    sb.append("    hasOrganizationProjects: ").append(toIndentedString(hasOrganizationProjects)).append("\n");
    sb.append("    hasRepositoryProjects: ").append(toIndentedString(hasRepositoryProjects)).append("\n");
    sb.append("    hooksUrl: ").append(toIndentedString(hooksUrl)).append("\n");
    sb.append("    htmlUrl: ").append(toIndentedString(htmlUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isVerified: ").append(toIndentedString(isVerified)).append("\n");
    sb.append("    issuesUrl: ").append(toIndentedString(issuesUrl)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    membersUrl: ").append(toIndentedString(membersUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    organizationsUrl: ").append(toIndentedString(organizationsUrl)).append("\n");
    sb.append("    publicGists: ").append(toIndentedString(publicGists)).append("\n");
    sb.append("    publicMembersUrl: ").append(toIndentedString(publicMembersUrl)).append("\n");
    sb.append("    publicRepos: ").append(toIndentedString(publicRepos)).append("\n");
    sb.append("    receivedEventsUrl: ").append(toIndentedString(receivedEventsUrl)).append("\n");
    sb.append("    reposUrl: ").append(toIndentedString(reposUrl)).append("\n");
    sb.append("    siteAdmin: ").append(toIndentedString(siteAdmin)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    starredUrl: ").append(toIndentedString(starredUrl)).append("\n");
    sb.append("    subscriptionsUrl: ").append(toIndentedString(subscriptionsUrl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avatar_url");
    openapiFields.add("created_at");
    openapiFields.add("description");
    openapiFields.add("events_url");
    openapiFields.add("followers");
    openapiFields.add("followers_url");
    openapiFields.add("following");
    openapiFields.add("following_url");
    openapiFields.add("gists_url");
    openapiFields.add("gravatar_id");
    openapiFields.add("has_organization_projects");
    openapiFields.add("has_repository_projects");
    openapiFields.add("hooks_url");
    openapiFields.add("html_url");
    openapiFields.add("id");
    openapiFields.add("is_verified");
    openapiFields.add("issues_url");
    openapiFields.add("login");
    openapiFields.add("members_url");
    openapiFields.add("name");
    openapiFields.add("node_id");
    openapiFields.add("organizations_url");
    openapiFields.add("public_gists");
    openapiFields.add("public_members_url");
    openapiFields.add("public_repos");
    openapiFields.add("received_events_url");
    openapiFields.add("repos_url");
    openapiFields.add("site_admin");
    openapiFields.add("slug");
    openapiFields.add("starred_url");
    openapiFields.add("subscriptions_url");
    openapiFields.add("type");
    openapiFields.add("updated_at");
    openapiFields.add("url");
    openapiFields.add("website_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("avatar_url");
    openapiRequiredFields.add("html_url");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("node_id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhookInstallationTargetRenamedAccount
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhookInstallationTargetRenamedAccount.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhookInstallationTargetRenamedAccount is not found in the empty JSON string", WebhookInstallationTargetRenamedAccount.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhookInstallationTargetRenamedAccount.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhookInstallationTargetRenamedAccount` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WebhookInstallationTargetRenamedAccount.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("avatar_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_url").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("events_url") != null && !jsonObj.get("events_url").isJsonNull()) && !jsonObj.get("events_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `events_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("events_url").toString()));
      }
      if ((jsonObj.get("followers_url") != null && !jsonObj.get("followers_url").isJsonNull()) && !jsonObj.get("followers_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `followers_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("followers_url").toString()));
      }
      if ((jsonObj.get("following_url") != null && !jsonObj.get("following_url").isJsonNull()) && !jsonObj.get("following_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `following_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("following_url").toString()));
      }
      if ((jsonObj.get("gists_url") != null && !jsonObj.get("gists_url").isJsonNull()) && !jsonObj.get("gists_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gists_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gists_url").toString()));
      }
      if ((jsonObj.get("gravatar_id") != null && !jsonObj.get("gravatar_id").isJsonNull()) && !jsonObj.get("gravatar_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gravatar_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gravatar_id").toString()));
      }
      if ((jsonObj.get("hooks_url") != null && !jsonObj.get("hooks_url").isJsonNull()) && !jsonObj.get("hooks_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hooks_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hooks_url").toString()));
      }
      if (!jsonObj.get("html_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `html_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("html_url").toString()));
      }
      if ((jsonObj.get("issues_url") != null && !jsonObj.get("issues_url").isJsonNull()) && !jsonObj.get("issues_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issues_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issues_url").toString()));
      }
      if ((jsonObj.get("login") != null && !jsonObj.get("login").isJsonNull()) && !jsonObj.get("login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login").toString()));
      }
      if ((jsonObj.get("members_url") != null && !jsonObj.get("members_url").isJsonNull()) && !jsonObj.get("members_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `members_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("members_url").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("node_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `node_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("node_id").toString()));
      }
      if ((jsonObj.get("organizations_url") != null && !jsonObj.get("organizations_url").isJsonNull()) && !jsonObj.get("organizations_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizations_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizations_url").toString()));
      }
      if ((jsonObj.get("public_members_url") != null && !jsonObj.get("public_members_url").isJsonNull()) && !jsonObj.get("public_members_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `public_members_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("public_members_url").toString()));
      }
      if ((jsonObj.get("received_events_url") != null && !jsonObj.get("received_events_url").isJsonNull()) && !jsonObj.get("received_events_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `received_events_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("received_events_url").toString()));
      }
      if ((jsonObj.get("repos_url") != null && !jsonObj.get("repos_url").isJsonNull()) && !jsonObj.get("repos_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repos_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repos_url").toString()));
      }
      if ((jsonObj.get("slug") != null && !jsonObj.get("slug").isJsonNull()) && !jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if ((jsonObj.get("starred_url") != null && !jsonObj.get("starred_url").isJsonNull()) && !jsonObj.get("starred_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `starred_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("starred_url").toString()));
      }
      if ((jsonObj.get("subscriptions_url") != null && !jsonObj.get("subscriptions_url").isJsonNull()) && !jsonObj.get("subscriptions_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptions_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptions_url").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhookInstallationTargetRenamedAccount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhookInstallationTargetRenamedAccount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhookInstallationTargetRenamedAccount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhookInstallationTargetRenamedAccount.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhookInstallationTargetRenamedAccount>() {
           @Override
           public void write(JsonWriter out, WebhookInstallationTargetRenamedAccount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhookInstallationTargetRenamedAccount read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhookInstallationTargetRenamedAccount given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhookInstallationTargetRenamedAccount
  * @throws IOException if the JSON string is invalid with respect to WebhookInstallationTargetRenamedAccount
  */
  public static WebhookInstallationTargetRenamedAccount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhookInstallationTargetRenamedAccount.class);
  }

 /**
  * Convert an instance of WebhookInstallationTargetRenamedAccount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

