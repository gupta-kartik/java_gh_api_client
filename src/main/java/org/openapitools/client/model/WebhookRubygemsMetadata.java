/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.WebhookRubygemsMetadataVersionInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebhookRubygemsMetadata
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-09T20:37:23.111113500+10:00[Australia/Brisbane]")
public class WebhookRubygemsMetadata {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_README = "readme";
  @SerializedName(SERIALIZED_NAME_README)
  private String readme;

  public static final String SERIALIZED_NAME_HOMEPAGE = "homepage";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE)
  private String homepage;

  public static final String SERIALIZED_NAME_VERSION_INFO = "version_info";
  @SerializedName(SERIALIZED_NAME_VERSION_INFO)
  private WebhookRubygemsMetadataVersionInfo versionInfo;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_REPO = "repo";
  @SerializedName(SERIALIZED_NAME_REPO)
  private String repo;

  public static final String SERIALIZED_NAME_DEPENDENCIES = "dependencies";
  @SerializedName(SERIALIZED_NAME_DEPENDENCIES)
  private List<Map<String, String>> dependencies;

  public static final String SERIALIZED_NAME_COMMIT_OID = "commit_oid";
  @SerializedName(SERIALIZED_NAME_COMMIT_OID)
  private String commitOid;

  public WebhookRubygemsMetadata() {
  }

  public WebhookRubygemsMetadata name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WebhookRubygemsMetadata description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WebhookRubygemsMetadata readme(String readme) {
    
    this.readme = readme;
    return this;
  }

   /**
   * Get readme
   * @return readme
  **/
  @javax.annotation.Nullable

  public String getReadme() {
    return readme;
  }


  public void setReadme(String readme) {
    this.readme = readme;
  }


  public WebhookRubygemsMetadata homepage(String homepage) {
    
    this.homepage = homepage;
    return this;
  }

   /**
   * Get homepage
   * @return homepage
  **/
  @javax.annotation.Nullable

  public String getHomepage() {
    return homepage;
  }


  public void setHomepage(String homepage) {
    this.homepage = homepage;
  }


  public WebhookRubygemsMetadata versionInfo(WebhookRubygemsMetadataVersionInfo versionInfo) {
    
    this.versionInfo = versionInfo;
    return this;
  }

   /**
   * Get versionInfo
   * @return versionInfo
  **/
  @javax.annotation.Nullable

  public WebhookRubygemsMetadataVersionInfo getVersionInfo() {
    return versionInfo;
  }


  public void setVersionInfo(WebhookRubygemsMetadataVersionInfo versionInfo) {
    this.versionInfo = versionInfo;
  }


  public WebhookRubygemsMetadata platform(String platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nullable

  public String getPlatform() {
    return platform;
  }


  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public WebhookRubygemsMetadata metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public WebhookRubygemsMetadata putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public WebhookRubygemsMetadata repo(String repo) {
    
    this.repo = repo;
    return this;
  }

   /**
   * Get repo
   * @return repo
  **/
  @javax.annotation.Nullable

  public String getRepo() {
    return repo;
  }


  public void setRepo(String repo) {
    this.repo = repo;
  }


  public WebhookRubygemsMetadata dependencies(List<Map<String, String>> dependencies) {
    
    this.dependencies = dependencies;
    return this;
  }

  public WebhookRubygemsMetadata addDependenciesItem(Map<String, String> dependenciesItem) {
    if (this.dependencies == null) {
      this.dependencies = new ArrayList<>();
    }
    this.dependencies.add(dependenciesItem);
    return this;
  }

   /**
   * Get dependencies
   * @return dependencies
  **/
  @javax.annotation.Nullable

  public List<Map<String, String>> getDependencies() {
    return dependencies;
  }


  public void setDependencies(List<Map<String, String>> dependencies) {
    this.dependencies = dependencies;
  }


  public WebhookRubygemsMetadata commitOid(String commitOid) {
    
    this.commitOid = commitOid;
    return this;
  }

   /**
   * Get commitOid
   * @return commitOid
  **/
  @javax.annotation.Nullable

  public String getCommitOid() {
    return commitOid;
  }


  public void setCommitOid(String commitOid) {
    this.commitOid = commitOid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookRubygemsMetadata webhookRubygemsMetadata = (WebhookRubygemsMetadata) o;
    return Objects.equals(this.name, webhookRubygemsMetadata.name) &&
        Objects.equals(this.description, webhookRubygemsMetadata.description) &&
        Objects.equals(this.readme, webhookRubygemsMetadata.readme) &&
        Objects.equals(this.homepage, webhookRubygemsMetadata.homepage) &&
        Objects.equals(this.versionInfo, webhookRubygemsMetadata.versionInfo) &&
        Objects.equals(this.platform, webhookRubygemsMetadata.platform) &&
        Objects.equals(this.metadata, webhookRubygemsMetadata.metadata) &&
        Objects.equals(this.repo, webhookRubygemsMetadata.repo) &&
        Objects.equals(this.dependencies, webhookRubygemsMetadata.dependencies) &&
        Objects.equals(this.commitOid, webhookRubygemsMetadata.commitOid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, readme, homepage, versionInfo, platform, metadata, repo, dependencies, commitOid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookRubygemsMetadata {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    readme: ").append(toIndentedString(readme)).append("\n");
    sb.append("    homepage: ").append(toIndentedString(homepage)).append("\n");
    sb.append("    versionInfo: ").append(toIndentedString(versionInfo)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    repo: ").append(toIndentedString(repo)).append("\n");
    sb.append("    dependencies: ").append(toIndentedString(dependencies)).append("\n");
    sb.append("    commitOid: ").append(toIndentedString(commitOid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("readme");
    openapiFields.add("homepage");
    openapiFields.add("version_info");
    openapiFields.add("platform");
    openapiFields.add("metadata");
    openapiFields.add("repo");
    openapiFields.add("dependencies");
    openapiFields.add("commit_oid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhookRubygemsMetadata
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhookRubygemsMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhookRubygemsMetadata is not found in the empty JSON string", WebhookRubygemsMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhookRubygemsMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhookRubygemsMetadata` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("readme") != null && !jsonObj.get("readme").isJsonNull()) && !jsonObj.get("readme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readme").toString()));
      }
      if ((jsonObj.get("homepage") != null && !jsonObj.get("homepage").isJsonNull()) && !jsonObj.get("homepage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homepage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homepage").toString()));
      }
      // validate the optional field `version_info`
      if (jsonObj.get("version_info") != null && !jsonObj.get("version_info").isJsonNull()) {
        WebhookRubygemsMetadataVersionInfo.validateJsonObject(jsonObj.getAsJsonObject("version_info"));
      }
      if ((jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) && !jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      if ((jsonObj.get("repo") != null && !jsonObj.get("repo").isJsonNull()) && !jsonObj.get("repo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repo").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dependencies") != null && !jsonObj.get("dependencies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dependencies` to be an array in the JSON string but got `%s`", jsonObj.get("dependencies").toString()));
      }
      if ((jsonObj.get("commit_oid") != null && !jsonObj.get("commit_oid").isJsonNull()) && !jsonObj.get("commit_oid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commit_oid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commit_oid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhookRubygemsMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhookRubygemsMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhookRubygemsMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhookRubygemsMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhookRubygemsMetadata>() {
           @Override
           public void write(JsonWriter out, WebhookRubygemsMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhookRubygemsMetadata read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhookRubygemsMetadata given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhookRubygemsMetadata
  * @throws IOException if the JSON string is invalid with respect to WebhookRubygemsMetadata
  */
  public static WebhookRubygemsMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhookRubygemsMetadata.class);
  }

 /**
  * Convert an instance of WebhookRubygemsMetadata to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

