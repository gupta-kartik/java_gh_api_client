/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Deployment;
import org.openapitools.client.model.OrganizationSimple;
import org.openapitools.client.model.PullRequest;
import org.openapitools.client.model.Repository;
import org.openapitools.client.model.SimpleInstallation;
import org.openapitools.client.model.SimpleUser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebhookDeploymentProtectionRuleRequested
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-09T20:37:23.111113500+10:00[Australia/Brisbane]")
public class WebhookDeploymentProtectionRuleRequested {
  /**
   * Gets or Sets action
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    REQUESTED("requested");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private ActionEnum action;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private String environment;

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private String event;

  public static final String SERIALIZED_NAME_DEPLOYMENT_CALLBACK_URL = "deployment_callback_url";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_CALLBACK_URL)
  private URI deploymentCallbackUrl;

  public static final String SERIALIZED_NAME_DEPLOYMENT = "deployment";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT)
  private Deployment deployment;

  public static final String SERIALIZED_NAME_PULL_REQUESTS = "pull_requests";
  @SerializedName(SERIALIZED_NAME_PULL_REQUESTS)
  private List<PullRequest> pullRequests;

  public static final String SERIALIZED_NAME_REPOSITORY = "repository";
  @SerializedName(SERIALIZED_NAME_REPOSITORY)
  private Repository repository;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private OrganizationSimple organization;

  public static final String SERIALIZED_NAME_INSTALLATION = "installation";
  @SerializedName(SERIALIZED_NAME_INSTALLATION)
  private SimpleInstallation installation;

  public static final String SERIALIZED_NAME_SENDER = "sender";
  @SerializedName(SERIALIZED_NAME_SENDER)
  private SimpleUser sender;

  public WebhookDeploymentProtectionRuleRequested() {
  }

  public WebhookDeploymentProtectionRuleRequested action(ActionEnum action) {
    
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @javax.annotation.Nullable

  public ActionEnum getAction() {
    return action;
  }


  public void setAction(ActionEnum action) {
    this.action = action;
  }


  public WebhookDeploymentProtectionRuleRequested environment(String environment) {
    
    this.environment = environment;
    return this;
  }

   /**
   * The name of the environment that has the deployment protection rule.
   * @return environment
  **/
  @javax.annotation.Nullable

  public String getEnvironment() {
    return environment;
  }


  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  public WebhookDeploymentProtectionRuleRequested event(String event) {
    
    this.event = event;
    return this;
  }

   /**
   * The event that triggered the deployment protection rule.
   * @return event
  **/
  @javax.annotation.Nullable

  public String getEvent() {
    return event;
  }


  public void setEvent(String event) {
    this.event = event;
  }


  public WebhookDeploymentProtectionRuleRequested deploymentCallbackUrl(URI deploymentCallbackUrl) {
    
    this.deploymentCallbackUrl = deploymentCallbackUrl;
    return this;
  }

   /**
   * The URL to review the deployment protection rule.
   * @return deploymentCallbackUrl
  **/
  @javax.annotation.Nullable

  public URI getDeploymentCallbackUrl() {
    return deploymentCallbackUrl;
  }


  public void setDeploymentCallbackUrl(URI deploymentCallbackUrl) {
    this.deploymentCallbackUrl = deploymentCallbackUrl;
  }


  public WebhookDeploymentProtectionRuleRequested deployment(Deployment deployment) {
    
    this.deployment = deployment;
    return this;
  }

   /**
   * Get deployment
   * @return deployment
  **/
  @javax.annotation.Nullable

  public Deployment getDeployment() {
    return deployment;
  }


  public void setDeployment(Deployment deployment) {
    this.deployment = deployment;
  }


  public WebhookDeploymentProtectionRuleRequested pullRequests(List<PullRequest> pullRequests) {
    
    this.pullRequests = pullRequests;
    return this;
  }

  public WebhookDeploymentProtectionRuleRequested addPullRequestsItem(PullRequest pullRequestsItem) {
    if (this.pullRequests == null) {
      this.pullRequests = new ArrayList<>();
    }
    this.pullRequests.add(pullRequestsItem);
    return this;
  }

   /**
   * Get pullRequests
   * @return pullRequests
  **/
  @javax.annotation.Nullable

  public List<PullRequest> getPullRequests() {
    return pullRequests;
  }


  public void setPullRequests(List<PullRequest> pullRequests) {
    this.pullRequests = pullRequests;
  }


  public WebhookDeploymentProtectionRuleRequested repository(Repository repository) {
    
    this.repository = repository;
    return this;
  }

   /**
   * Get repository
   * @return repository
  **/
  @javax.annotation.Nullable

  public Repository getRepository() {
    return repository;
  }


  public void setRepository(Repository repository) {
    this.repository = repository;
  }


  public WebhookDeploymentProtectionRuleRequested organization(OrganizationSimple organization) {
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable

  public OrganizationSimple getOrganization() {
    return organization;
  }


  public void setOrganization(OrganizationSimple organization) {
    this.organization = organization;
  }


  public WebhookDeploymentProtectionRuleRequested installation(SimpleInstallation installation) {
    
    this.installation = installation;
    return this;
  }

   /**
   * Get installation
   * @return installation
  **/
  @javax.annotation.Nullable

  public SimpleInstallation getInstallation() {
    return installation;
  }


  public void setInstallation(SimpleInstallation installation) {
    this.installation = installation;
  }


  public WebhookDeploymentProtectionRuleRequested sender(SimpleUser sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @javax.annotation.Nullable

  public SimpleUser getSender() {
    return sender;
  }


  public void setSender(SimpleUser sender) {
    this.sender = sender;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookDeploymentProtectionRuleRequested webhookDeploymentProtectionRuleRequested = (WebhookDeploymentProtectionRuleRequested) o;
    return Objects.equals(this.action, webhookDeploymentProtectionRuleRequested.action) &&
        Objects.equals(this.environment, webhookDeploymentProtectionRuleRequested.environment) &&
        Objects.equals(this.event, webhookDeploymentProtectionRuleRequested.event) &&
        Objects.equals(this.deploymentCallbackUrl, webhookDeploymentProtectionRuleRequested.deploymentCallbackUrl) &&
        Objects.equals(this.deployment, webhookDeploymentProtectionRuleRequested.deployment) &&
        Objects.equals(this.pullRequests, webhookDeploymentProtectionRuleRequested.pullRequests) &&
        Objects.equals(this.repository, webhookDeploymentProtectionRuleRequested.repository) &&
        Objects.equals(this.organization, webhookDeploymentProtectionRuleRequested.organization) &&
        Objects.equals(this.installation, webhookDeploymentProtectionRuleRequested.installation) &&
        Objects.equals(this.sender, webhookDeploymentProtectionRuleRequested.sender);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, environment, event, deploymentCallbackUrl, deployment, pullRequests, repository, organization, installation, sender);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookDeploymentProtectionRuleRequested {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    deploymentCallbackUrl: ").append(toIndentedString(deploymentCallbackUrl)).append("\n");
    sb.append("    deployment: ").append(toIndentedString(deployment)).append("\n");
    sb.append("    pullRequests: ").append(toIndentedString(pullRequests)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    installation: ").append(toIndentedString(installation)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("environment");
    openapiFields.add("event");
    openapiFields.add("deployment_callback_url");
    openapiFields.add("deployment");
    openapiFields.add("pull_requests");
    openapiFields.add("repository");
    openapiFields.add("organization");
    openapiFields.add("installation");
    openapiFields.add("sender");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhookDeploymentProtectionRuleRequested
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhookDeploymentProtectionRuleRequested.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhookDeploymentProtectionRuleRequested is not found in the empty JSON string", WebhookDeploymentProtectionRuleRequested.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhookDeploymentProtectionRuleRequested.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhookDeploymentProtectionRuleRequested` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) && !jsonObj.get("environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment").toString()));
      }
      if ((jsonObj.get("event") != null && !jsonObj.get("event").isJsonNull()) && !jsonObj.get("event").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event").toString()));
      }
      if ((jsonObj.get("deployment_callback_url") != null && !jsonObj.get("deployment_callback_url").isJsonNull()) && !jsonObj.get("deployment_callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deployment_callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deployment_callback_url").toString()));
      }
      // validate the optional field `deployment`
      if (jsonObj.get("deployment") != null && !jsonObj.get("deployment").isJsonNull()) {
        Deployment.validateJsonObject(jsonObj.getAsJsonObject("deployment"));
      }
      if (jsonObj.get("pull_requests") != null && !jsonObj.get("pull_requests").isJsonNull()) {
        JsonArray jsonArraypullRequests = jsonObj.getAsJsonArray("pull_requests");
        if (jsonArraypullRequests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pull_requests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pull_requests` to be an array in the JSON string but got `%s`", jsonObj.get("pull_requests").toString()));
          }

          // validate the optional field `pull_requests` (array)
          for (int i = 0; i < jsonArraypullRequests.size(); i++) {
            PullRequest.validateJsonObject(jsonArraypullRequests.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `repository`
      if (jsonObj.get("repository") != null && !jsonObj.get("repository").isJsonNull()) {
        Repository.validateJsonObject(jsonObj.getAsJsonObject("repository"));
      }
      // validate the optional field `organization`
      if (jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) {
        OrganizationSimple.validateJsonObject(jsonObj.getAsJsonObject("organization"));
      }
      // validate the optional field `installation`
      if (jsonObj.get("installation") != null && !jsonObj.get("installation").isJsonNull()) {
        SimpleInstallation.validateJsonObject(jsonObj.getAsJsonObject("installation"));
      }
      // validate the optional field `sender`
      if (jsonObj.get("sender") != null && !jsonObj.get("sender").isJsonNull()) {
        SimpleUser.validateJsonObject(jsonObj.getAsJsonObject("sender"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhookDeploymentProtectionRuleRequested.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhookDeploymentProtectionRuleRequested' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhookDeploymentProtectionRuleRequested> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhookDeploymentProtectionRuleRequested.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhookDeploymentProtectionRuleRequested>() {
           @Override
           public void write(JsonWriter out, WebhookDeploymentProtectionRuleRequested value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhookDeploymentProtectionRuleRequested read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhookDeploymentProtectionRuleRequested given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhookDeploymentProtectionRuleRequested
  * @throws IOException if the JSON string is invalid with respect to WebhookDeploymentProtectionRuleRequested
  */
  public static WebhookDeploymentProtectionRuleRequested fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhookDeploymentProtectionRuleRequested.class);
  }

 /**
  * Convert an instance of WebhookDeploymentProtectionRuleRequested to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

