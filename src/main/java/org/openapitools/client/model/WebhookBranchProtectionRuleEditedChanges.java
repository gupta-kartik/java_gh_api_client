/*
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.WebhookBranchProtectionRuleEditedChangesAdminEnforced;
import org.openapitools.client.model.WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames;
import org.openapitools.client.model.WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * If the action was &#x60;edited&#x60;, the changes to the rule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-09T20:37:23.111113500+10:00[Australia/Brisbane]")
public class WebhookBranchProtectionRuleEditedChanges {
  public static final String SERIALIZED_NAME_ADMIN_ENFORCED = "admin_enforced";
  @SerializedName(SERIALIZED_NAME_ADMIN_ENFORCED)
  private WebhookBranchProtectionRuleEditedChangesAdminEnforced adminEnforced;

  public static final String SERIALIZED_NAME_AUTHORIZED_ACTOR_NAMES = "authorized_actor_names";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_ACTOR_NAMES)
  private WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames authorizedActorNames;

  public static final String SERIALIZED_NAME_AUTHORIZED_ACTORS_ONLY = "authorized_actors_only";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_ACTORS_ONLY)
  private WebhookBranchProtectionRuleEditedChangesAdminEnforced authorizedActorsOnly;

  public static final String SERIALIZED_NAME_AUTHORIZED_DISMISSAL_ACTORS_ONLY = "authorized_dismissal_actors_only";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_DISMISSAL_ACTORS_ONLY)
  private WebhookBranchProtectionRuleEditedChangesAdminEnforced authorizedDismissalActorsOnly;

  public static final String SERIALIZED_NAME_LINEAR_HISTORY_REQUIREMENT_ENFORCEMENT_LEVEL = "linear_history_requirement_enforcement_level";
  @SerializedName(SERIALIZED_NAME_LINEAR_HISTORY_REQUIREMENT_ENFORCEMENT_LEVEL)
  private WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel linearHistoryRequirementEnforcementLevel;

  public static final String SERIALIZED_NAME_REQUIRED_STATUS_CHECKS = "required_status_checks";
  @SerializedName(SERIALIZED_NAME_REQUIRED_STATUS_CHECKS)
  private WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames requiredStatusChecks;

  public static final String SERIALIZED_NAME_REQUIRED_STATUS_CHECKS_ENFORCEMENT_LEVEL = "required_status_checks_enforcement_level";
  @SerializedName(SERIALIZED_NAME_REQUIRED_STATUS_CHECKS_ENFORCEMENT_LEVEL)
  private WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel requiredStatusChecksEnforcementLevel;

  public WebhookBranchProtectionRuleEditedChanges() {
  }

  public WebhookBranchProtectionRuleEditedChanges adminEnforced(WebhookBranchProtectionRuleEditedChangesAdminEnforced adminEnforced) {
    
    this.adminEnforced = adminEnforced;
    return this;
  }

   /**
   * Get adminEnforced
   * @return adminEnforced
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesAdminEnforced getAdminEnforced() {
    return adminEnforced;
  }


  public void setAdminEnforced(WebhookBranchProtectionRuleEditedChangesAdminEnforced adminEnforced) {
    this.adminEnforced = adminEnforced;
  }


  public WebhookBranchProtectionRuleEditedChanges authorizedActorNames(WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames authorizedActorNames) {
    
    this.authorizedActorNames = authorizedActorNames;
    return this;
  }

   /**
   * Get authorizedActorNames
   * @return authorizedActorNames
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames getAuthorizedActorNames() {
    return authorizedActorNames;
  }


  public void setAuthorizedActorNames(WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames authorizedActorNames) {
    this.authorizedActorNames = authorizedActorNames;
  }


  public WebhookBranchProtectionRuleEditedChanges authorizedActorsOnly(WebhookBranchProtectionRuleEditedChangesAdminEnforced authorizedActorsOnly) {
    
    this.authorizedActorsOnly = authorizedActorsOnly;
    return this;
  }

   /**
   * Get authorizedActorsOnly
   * @return authorizedActorsOnly
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesAdminEnforced getAuthorizedActorsOnly() {
    return authorizedActorsOnly;
  }


  public void setAuthorizedActorsOnly(WebhookBranchProtectionRuleEditedChangesAdminEnforced authorizedActorsOnly) {
    this.authorizedActorsOnly = authorizedActorsOnly;
  }


  public WebhookBranchProtectionRuleEditedChanges authorizedDismissalActorsOnly(WebhookBranchProtectionRuleEditedChangesAdminEnforced authorizedDismissalActorsOnly) {
    
    this.authorizedDismissalActorsOnly = authorizedDismissalActorsOnly;
    return this;
  }

   /**
   * Get authorizedDismissalActorsOnly
   * @return authorizedDismissalActorsOnly
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesAdminEnforced getAuthorizedDismissalActorsOnly() {
    return authorizedDismissalActorsOnly;
  }


  public void setAuthorizedDismissalActorsOnly(WebhookBranchProtectionRuleEditedChangesAdminEnforced authorizedDismissalActorsOnly) {
    this.authorizedDismissalActorsOnly = authorizedDismissalActorsOnly;
  }


  public WebhookBranchProtectionRuleEditedChanges linearHistoryRequirementEnforcementLevel(WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel linearHistoryRequirementEnforcementLevel) {
    
    this.linearHistoryRequirementEnforcementLevel = linearHistoryRequirementEnforcementLevel;
    return this;
  }

   /**
   * Get linearHistoryRequirementEnforcementLevel
   * @return linearHistoryRequirementEnforcementLevel
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel getLinearHistoryRequirementEnforcementLevel() {
    return linearHistoryRequirementEnforcementLevel;
  }


  public void setLinearHistoryRequirementEnforcementLevel(WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel linearHistoryRequirementEnforcementLevel) {
    this.linearHistoryRequirementEnforcementLevel = linearHistoryRequirementEnforcementLevel;
  }


  public WebhookBranchProtectionRuleEditedChanges requiredStatusChecks(WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames requiredStatusChecks) {
    
    this.requiredStatusChecks = requiredStatusChecks;
    return this;
  }

   /**
   * Get requiredStatusChecks
   * @return requiredStatusChecks
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames getRequiredStatusChecks() {
    return requiredStatusChecks;
  }


  public void setRequiredStatusChecks(WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames requiredStatusChecks) {
    this.requiredStatusChecks = requiredStatusChecks;
  }


  public WebhookBranchProtectionRuleEditedChanges requiredStatusChecksEnforcementLevel(WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel requiredStatusChecksEnforcementLevel) {
    
    this.requiredStatusChecksEnforcementLevel = requiredStatusChecksEnforcementLevel;
    return this;
  }

   /**
   * Get requiredStatusChecksEnforcementLevel
   * @return requiredStatusChecksEnforcementLevel
  **/
  @javax.annotation.Nullable

  public WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel getRequiredStatusChecksEnforcementLevel() {
    return requiredStatusChecksEnforcementLevel;
  }


  public void setRequiredStatusChecksEnforcementLevel(WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel requiredStatusChecksEnforcementLevel) {
    this.requiredStatusChecksEnforcementLevel = requiredStatusChecksEnforcementLevel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookBranchProtectionRuleEditedChanges webhookBranchProtectionRuleEditedChanges = (WebhookBranchProtectionRuleEditedChanges) o;
    return Objects.equals(this.adminEnforced, webhookBranchProtectionRuleEditedChanges.adminEnforced) &&
        Objects.equals(this.authorizedActorNames, webhookBranchProtectionRuleEditedChanges.authorizedActorNames) &&
        Objects.equals(this.authorizedActorsOnly, webhookBranchProtectionRuleEditedChanges.authorizedActorsOnly) &&
        Objects.equals(this.authorizedDismissalActorsOnly, webhookBranchProtectionRuleEditedChanges.authorizedDismissalActorsOnly) &&
        Objects.equals(this.linearHistoryRequirementEnforcementLevel, webhookBranchProtectionRuleEditedChanges.linearHistoryRequirementEnforcementLevel) &&
        Objects.equals(this.requiredStatusChecks, webhookBranchProtectionRuleEditedChanges.requiredStatusChecks) &&
        Objects.equals(this.requiredStatusChecksEnforcementLevel, webhookBranchProtectionRuleEditedChanges.requiredStatusChecksEnforcementLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminEnforced, authorizedActorNames, authorizedActorsOnly, authorizedDismissalActorsOnly, linearHistoryRequirementEnforcementLevel, requiredStatusChecks, requiredStatusChecksEnforcementLevel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookBranchProtectionRuleEditedChanges {\n");
    sb.append("    adminEnforced: ").append(toIndentedString(adminEnforced)).append("\n");
    sb.append("    authorizedActorNames: ").append(toIndentedString(authorizedActorNames)).append("\n");
    sb.append("    authorizedActorsOnly: ").append(toIndentedString(authorizedActorsOnly)).append("\n");
    sb.append("    authorizedDismissalActorsOnly: ").append(toIndentedString(authorizedDismissalActorsOnly)).append("\n");
    sb.append("    linearHistoryRequirementEnforcementLevel: ").append(toIndentedString(linearHistoryRequirementEnforcementLevel)).append("\n");
    sb.append("    requiredStatusChecks: ").append(toIndentedString(requiredStatusChecks)).append("\n");
    sb.append("    requiredStatusChecksEnforcementLevel: ").append(toIndentedString(requiredStatusChecksEnforcementLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("admin_enforced");
    openapiFields.add("authorized_actor_names");
    openapiFields.add("authorized_actors_only");
    openapiFields.add("authorized_dismissal_actors_only");
    openapiFields.add("linear_history_requirement_enforcement_level");
    openapiFields.add("required_status_checks");
    openapiFields.add("required_status_checks_enforcement_level");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhookBranchProtectionRuleEditedChanges
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhookBranchProtectionRuleEditedChanges.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhookBranchProtectionRuleEditedChanges is not found in the empty JSON string", WebhookBranchProtectionRuleEditedChanges.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhookBranchProtectionRuleEditedChanges.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhookBranchProtectionRuleEditedChanges` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `admin_enforced`
      if (jsonObj.get("admin_enforced") != null && !jsonObj.get("admin_enforced").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesAdminEnforced.validateJsonObject(jsonObj.getAsJsonObject("admin_enforced"));
      }
      // validate the optional field `authorized_actor_names`
      if (jsonObj.get("authorized_actor_names") != null && !jsonObj.get("authorized_actor_names").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames.validateJsonObject(jsonObj.getAsJsonObject("authorized_actor_names"));
      }
      // validate the optional field `authorized_actors_only`
      if (jsonObj.get("authorized_actors_only") != null && !jsonObj.get("authorized_actors_only").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesAdminEnforced.validateJsonObject(jsonObj.getAsJsonObject("authorized_actors_only"));
      }
      // validate the optional field `authorized_dismissal_actors_only`
      if (jsonObj.get("authorized_dismissal_actors_only") != null && !jsonObj.get("authorized_dismissal_actors_only").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesAdminEnforced.validateJsonObject(jsonObj.getAsJsonObject("authorized_dismissal_actors_only"));
      }
      // validate the optional field `linear_history_requirement_enforcement_level`
      if (jsonObj.get("linear_history_requirement_enforcement_level") != null && !jsonObj.get("linear_history_requirement_enforcement_level").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel.validateJsonObject(jsonObj.getAsJsonObject("linear_history_requirement_enforcement_level"));
      }
      // validate the optional field `required_status_checks`
      if (jsonObj.get("required_status_checks") != null && !jsonObj.get("required_status_checks").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesAuthorizedActorNames.validateJsonObject(jsonObj.getAsJsonObject("required_status_checks"));
      }
      // validate the optional field `required_status_checks_enforcement_level`
      if (jsonObj.get("required_status_checks_enforcement_level") != null && !jsonObj.get("required_status_checks_enforcement_level").isJsonNull()) {
        WebhookBranchProtectionRuleEditedChangesLinearHistoryRequirementEnforcementLevel.validateJsonObject(jsonObj.getAsJsonObject("required_status_checks_enforcement_level"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhookBranchProtectionRuleEditedChanges.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhookBranchProtectionRuleEditedChanges' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhookBranchProtectionRuleEditedChanges> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhookBranchProtectionRuleEditedChanges.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhookBranchProtectionRuleEditedChanges>() {
           @Override
           public void write(JsonWriter out, WebhookBranchProtectionRuleEditedChanges value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhookBranchProtectionRuleEditedChanges read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhookBranchProtectionRuleEditedChanges given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhookBranchProtectionRuleEditedChanges
  * @throws IOException if the JSON string is invalid with respect to WebhookBranchProtectionRuleEditedChanges
  */
  public static WebhookBranchProtectionRuleEditedChanges fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhookBranchProtectionRuleEditedChanges.class);
  }

 /**
  * Convert an instance of WebhookBranchProtectionRuleEditedChanges to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

